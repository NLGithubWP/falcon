// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lr_grpc.proto

#include "lr_grpc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_lr_5fgrpc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PredictionOutput_lr_5fgrpc_2eproto;
namespace com {
namespace nus {
namespace dbsytem {
namespace falcon {
namespace v0 {
namespace inference {
class PredictionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictionRequest> _instance;
} _PredictionRequest_default_instance_;
class PredictionOutputDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictionOutput> _instance;
} _PredictionOutput_default_instance_;
class PredictionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictionResponse> _instance;
} _PredictionResponse_default_instance_;
}  // namespace inference
}  // namespace v0
}  // namespace falcon
}  // namespace dbsytem
}  // namespace nus
}  // namespace com
static void InitDefaultsscc_info_PredictionOutput_lr_5fgrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::nus::dbsytem::falcon::v0::inference::_PredictionOutput_default_instance_;
    new (ptr) ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PredictionOutput_lr_5fgrpc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PredictionOutput_lr_5fgrpc_2eproto}, {}};

static void InitDefaultsscc_info_PredictionRequest_lr_5fgrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::nus::dbsytem::falcon::v0::inference::_PredictionRequest_default_instance_;
    new (ptr) ::com::nus::dbsytem::falcon::v0::inference::PredictionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PredictionRequest_lr_5fgrpc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PredictionRequest_lr_5fgrpc_2eproto}, {}};

static void InitDefaultsscc_info_PredictionResponse_lr_5fgrpc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com::nus::dbsytem::falcon::v0::inference::_PredictionResponse_default_instance_;
    new (ptr) ::com::nus::dbsytem::falcon::v0::inference::PredictionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PredictionResponse_lr_5fgrpc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PredictionResponse_lr_5fgrpc_2eproto}, {
      &scc_info_PredictionOutput_lr_5fgrpc_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_lr_5fgrpc_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_lr_5fgrpc_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_lr_5fgrpc_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_lr_5fgrpc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionRequest, sample_num_),
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionRequest, sample_ids_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionOutput, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionOutput, label_),
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionOutput, probabilities_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionResponse, sample_num_),
  PROTOBUF_FIELD_OFFSET(::com::nus::dbsytem::falcon::v0::inference::PredictionResponse, outputs_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com::nus::dbsytem::falcon::v0::inference::PredictionRequest)},
  { 7, -1, sizeof(::com::nus::dbsytem::falcon::v0::inference::PredictionOutput)},
  { 14, -1, sizeof(::com::nus::dbsytem::falcon::v0::inference::PredictionResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::nus::dbsytem::falcon::v0::inference::_PredictionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::nus::dbsytem::falcon::v0::inference::_PredictionOutput_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com::nus::dbsytem::falcon::v0::inference::_PredictionResponse_default_instance_),
};

const char descriptor_table_protodef_lr_5fgrpc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rlr_grpc.proto\022#com.nus.dbsytem.falcon."
  "v0.inference\";\n\021PredictionRequest\022\022\n\nsam"
  "ple_num\030\001 \001(\005\022\022\n\nsample_ids\030\002 \003(\005\"8\n\020Pre"
  "dictionOutput\022\r\n\005label\030\001 \001(\002\022\025\n\rprobabil"
  "ities\030\002 \003(\002\"p\n\022PredictionResponse\022\022\n\nsam"
  "ple_num\030\001 \001(\005\022F\n\007outputs\030\002 \003(\01325.com.nus"
  ".dbsytem.falcon.v0.inference.PredictionO"
  "utput2\216\001\n\013InferenceLR\022\177\n\nPrediction\0226.co"
  "m.nus.dbsytem.falcon.v0.inference.Predic"
  "tionRequest\0327.com.nus.dbsytem.falcon.v0."
  "inference.PredictionResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_lr_5fgrpc_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_lr_5fgrpc_2eproto_sccs[3] = {
  &scc_info_PredictionOutput_lr_5fgrpc_2eproto.base,
  &scc_info_PredictionRequest_lr_5fgrpc_2eproto.base,
  &scc_info_PredictionResponse_lr_5fgrpc_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_lr_5fgrpc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lr_5fgrpc_2eproto = {
  false, false, descriptor_table_protodef_lr_5fgrpc_2eproto, "lr_grpc.proto", 438,
  &descriptor_table_lr_5fgrpc_2eproto_once, descriptor_table_lr_5fgrpc_2eproto_sccs, descriptor_table_lr_5fgrpc_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_lr_5fgrpc_2eproto::offsets,
  file_level_metadata_lr_5fgrpc_2eproto, 3, file_level_enum_descriptors_lr_5fgrpc_2eproto, file_level_service_descriptors_lr_5fgrpc_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_lr_5fgrpc_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_lr_5fgrpc_2eproto)), true);
namespace com {
namespace nus {
namespace dbsytem {
namespace falcon {
namespace v0 {
namespace inference {

// ===================================================================

class PredictionRequest::_Internal {
 public:
};

PredictionRequest::PredictionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  sample_ids_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
}
PredictionRequest::PredictionRequest(const PredictionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      sample_ids_(from.sample_ids_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sample_num_ = from.sample_num_;
  // @@protoc_insertion_point(copy_constructor:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
}

void PredictionRequest::SharedCtor() {
  sample_num_ = 0;
}

PredictionRequest::~PredictionRequest() {
  // @@protoc_insertion_point(destructor:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PredictionRequest::ArenaDtor(void* object) {
  PredictionRequest* _this = reinterpret_cast< PredictionRequest* >(object);
  (void)_this;
}
void PredictionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictionRequest& PredictionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictionRequest_lr_5fgrpc_2eproto.base);
  return *internal_default_instance();
}


void PredictionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sample_ids_.Clear();
  sample_num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sample_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sample_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 sample_ids = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(_internal_mutable_sample_ids(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_sample_ids(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sample_num = 1;
  if (this->sample_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sample_num(), target);
  }

  // repeated int32 sample_ids = 2;
  {
    int byte_size = _sample_ids_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          2, _internal_sample_ids(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  return target;
}

size_t PredictionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 sample_ids = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->sample_ids_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _sample_ids_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 sample_num = 1;
  if (this->sample_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sample_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
    MergeFrom(*source);
  }
}

void PredictionRequest::MergeFrom(const PredictionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  sample_ids_.MergeFrom(from.sample_ids_);
  if (from.sample_num() != 0) {
    _internal_set_sample_num(from._internal_sample_num());
  }
}

void PredictionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionRequest::CopyFrom(const PredictionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionRequest::IsInitialized() const {
  return true;
}

void PredictionRequest::InternalSwap(PredictionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sample_ids_.InternalSwap(&other->sample_ids_);
  swap(sample_num_, other->sample_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PredictionOutput::_Internal {
 public:
};

PredictionOutput::PredictionOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  probabilities_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
}
PredictionOutput::PredictionOutput(const PredictionOutput& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      probabilities_(from.probabilities_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  label_ = from.label_;
  // @@protoc_insertion_point(copy_constructor:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
}

void PredictionOutput::SharedCtor() {
  label_ = 0;
}

PredictionOutput::~PredictionOutput() {
  // @@protoc_insertion_point(destructor:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictionOutput::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PredictionOutput::ArenaDtor(void* object) {
  PredictionOutput* _this = reinterpret_cast< PredictionOutput* >(object);
  (void)_this;
}
void PredictionOutput::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictionOutput::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictionOutput& PredictionOutput::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictionOutput_lr_5fgrpc_2eproto.base);
  return *internal_default_instance();
}


void PredictionOutput::Clear() {
// @@protoc_insertion_point(message_clear_start:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  probabilities_.Clear();
  label_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionOutput::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float label = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          label_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // repeated float probabilities = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedFloatParser(_internal_mutable_probabilities(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 21) {
          _internal_add_probabilities(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionOutput::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float label = 1;
  if (!(this->label() <= 0 && this->label() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_label(), target);
  }

  // repeated float probabilities = 2;
  if (this->_internal_probabilities_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_probabilities(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  return target;
}

size_t PredictionOutput::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated float probabilities = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_probabilities_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _probabilities_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // float label = 1;
  if (!(this->label() <= 0 && this->label() >= 0)) {
    total_size += 1 + 4;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionOutput::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionOutput* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionOutput>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
    MergeFrom(*source);
  }
}

void PredictionOutput::MergeFrom(const PredictionOutput& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  probabilities_.MergeFrom(from.probabilities_);
  if (!(from.label() <= 0 && from.label() >= 0)) {
    _internal_set_label(from._internal_label());
  }
}

void PredictionOutput::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionOutput::CopyFrom(const PredictionOutput& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionOutput::IsInitialized() const {
  return true;
}

void PredictionOutput::InternalSwap(PredictionOutput* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  probabilities_.InternalSwap(&other->probabilities_);
  swap(label_, other->label_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionOutput::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PredictionResponse::_Internal {
 public:
};

PredictionResponse::PredictionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  outputs_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
}
PredictionResponse::PredictionResponse(const PredictionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      outputs_(from.outputs_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sample_num_ = from.sample_num_;
  // @@protoc_insertion_point(copy_constructor:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
}

void PredictionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictionResponse_lr_5fgrpc_2eproto.base);
  sample_num_ = 0;
}

PredictionResponse::~PredictionResponse() {
  // @@protoc_insertion_point(destructor:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PredictionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PredictionResponse::ArenaDtor(void* object) {
  PredictionResponse* _this = reinterpret_cast< PredictionResponse* >(object);
  (void)_this;
}
void PredictionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PredictionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictionResponse& PredictionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictionResponse_lr_5fgrpc_2eproto.base);
  return *internal_default_instance();
}


void PredictionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputs_.Clear();
  sample_num_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PredictionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sample_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sample_num_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .com.nus.dbsytem.falcon.v0.inference.PredictionOutput outputs = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_outputs(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sample_num = 1;
  if (this->sample_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sample_num(), target);
  }

  // repeated .com.nus.dbsytem.falcon.v0.inference.PredictionOutput outputs = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_outputs_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_outputs(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  return target;
}

size_t PredictionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .com.nus.dbsytem.falcon.v0.inference.PredictionOutput outputs = 2;
  total_size += 1UL * this->_internal_outputs_size();
  for (const auto& msg : this->outputs_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // int32 sample_num = 1;
  if (this->sample_num() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sample_num());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
    MergeFrom(*source);
  }
}

void PredictionResponse::MergeFrom(const PredictionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outputs_.MergeFrom(from.outputs_);
  if (from.sample_num() != 0) {
    _internal_set_sample_num(from._internal_sample_num());
  }
}

void PredictionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionResponse::CopyFrom(const PredictionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionResponse::IsInitialized() const {
  return true;
}

void PredictionResponse::InternalSwap(PredictionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  outputs_.InternalSwap(&other->outputs_);
  swap(sample_num_, other->sample_num_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace inference
}  // namespace v0
}  // namespace falcon
}  // namespace dbsytem
}  // namespace nus
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com::nus::dbsytem::falcon::v0::inference::PredictionRequest* Arena::CreateMaybeMessage< ::com::nus::dbsytem::falcon::v0::inference::PredictionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::nus::dbsytem::falcon::v0::inference::PredictionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* Arena::CreateMaybeMessage< ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput >(arena);
}
template<> PROTOBUF_NOINLINE ::com::nus::dbsytem::falcon::v0::inference::PredictionResponse* Arena::CreateMaybeMessage< ::com::nus::dbsytem::falcon::v0::inference::PredictionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::com::nus::dbsytem::falcon::v0::inference::PredictionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>

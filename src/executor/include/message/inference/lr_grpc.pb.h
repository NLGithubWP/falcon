// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: lr_grpc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_lr_5fgrpc_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_lr_5fgrpc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_lr_5fgrpc_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_lr_5fgrpc_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_lr_5fgrpc_2eproto;
namespace com {
namespace nus {
namespace dbsytem {
namespace falcon {
namespace v0 {
namespace inference {
class PredictionOutput;
class PredictionOutputDefaultTypeInternal;
extern PredictionOutputDefaultTypeInternal _PredictionOutput_default_instance_;
class PredictionRequest;
class PredictionRequestDefaultTypeInternal;
extern PredictionRequestDefaultTypeInternal _PredictionRequest_default_instance_;
class PredictionResponse;
class PredictionResponseDefaultTypeInternal;
extern PredictionResponseDefaultTypeInternal _PredictionResponse_default_instance_;
}  // namespace inference
}  // namespace v0
}  // namespace falcon
}  // namespace dbsytem
}  // namespace nus
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* Arena::CreateMaybeMessage<::com::nus::dbsytem::falcon::v0::inference::PredictionOutput>(Arena*);
template<> ::com::nus::dbsytem::falcon::v0::inference::PredictionRequest* Arena::CreateMaybeMessage<::com::nus::dbsytem::falcon::v0::inference::PredictionRequest>(Arena*);
template<> ::com::nus::dbsytem::falcon::v0::inference::PredictionResponse* Arena::CreateMaybeMessage<::com::nus::dbsytem::falcon::v0::inference::PredictionResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace nus {
namespace dbsytem {
namespace falcon {
namespace v0 {
namespace inference {

// ===================================================================

class PredictionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsytem.falcon.v0.inference.PredictionRequest) */ {
 public:
  inline PredictionRequest() : PredictionRequest(nullptr) {}
  virtual ~PredictionRequest();

  PredictionRequest(const PredictionRequest& from);
  PredictionRequest(PredictionRequest&& from) noexcept
    : PredictionRequest() {
    *this = ::std::move(from);
  }

  inline PredictionRequest& operator=(const PredictionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionRequest& operator=(PredictionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PredictionRequest& default_instance();

  static inline const PredictionRequest* internal_default_instance() {
    return reinterpret_cast<const PredictionRequest*>(
               &_PredictionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PredictionRequest& a, PredictionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PredictionRequest* New() const final {
    return CreateMaybeMessage<PredictionRequest>(nullptr);
  }

  PredictionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PredictionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PredictionRequest& from);
  void MergeFrom(const PredictionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.nus.dbsytem.falcon.v0.inference.PredictionRequest";
  }
  protected:
  explicit PredictionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lr_5fgrpc_2eproto);
    return ::descriptor_table_lr_5fgrpc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSampleIdsFieldNumber = 2,
    kSampleNumFieldNumber = 1,
  };
  // repeated int32 sample_ids = 2;
  int sample_ids_size() const;
  private:
  int _internal_sample_ids_size() const;
  public:
  void clear_sample_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sample_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_sample_ids() const;
  void _internal_add_sample_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_sample_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 sample_ids(int index) const;
  void set_sample_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_sample_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      sample_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_sample_ids();

  // int32 sample_num = 1;
  void clear_sample_num();
  ::PROTOBUF_NAMESPACE_ID::int32 sample_num() const;
  void set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sample_num() const;
  void _internal_set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:com.nus.dbsytem.falcon.v0.inference.PredictionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > sample_ids_;
  mutable std::atomic<int> _sample_ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 sample_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lr_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class PredictionOutput PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsytem.falcon.v0.inference.PredictionOutput) */ {
 public:
  inline PredictionOutput() : PredictionOutput(nullptr) {}
  virtual ~PredictionOutput();

  PredictionOutput(const PredictionOutput& from);
  PredictionOutput(PredictionOutput&& from) noexcept
    : PredictionOutput() {
    *this = ::std::move(from);
  }

  inline PredictionOutput& operator=(const PredictionOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionOutput& operator=(PredictionOutput&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PredictionOutput& default_instance();

  static inline const PredictionOutput* internal_default_instance() {
    return reinterpret_cast<const PredictionOutput*>(
               &_PredictionOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PredictionOutput& a, PredictionOutput& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionOutput* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionOutput* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PredictionOutput* New() const final {
    return CreateMaybeMessage<PredictionOutput>(nullptr);
  }

  PredictionOutput* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PredictionOutput>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PredictionOutput& from);
  void MergeFrom(const PredictionOutput& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionOutput* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.nus.dbsytem.falcon.v0.inference.PredictionOutput";
  }
  protected:
  explicit PredictionOutput(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lr_5fgrpc_2eproto);
    return ::descriptor_table_lr_5fgrpc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kProbabilitiesFieldNumber = 2,
    kLabelFieldNumber = 1,
  };
  // repeated float probabilities = 2;
  int probabilities_size() const;
  private:
  int _internal_probabilities_size() const;
  public:
  void clear_probabilities();
  private:
  float _internal_probabilities(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_probabilities() const;
  void _internal_add_probabilities(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_probabilities();
  public:
  float probabilities(int index) const;
  void set_probabilities(int index, float value);
  void add_probabilities(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      probabilities() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_probabilities();

  // float label = 1;
  void clear_label();
  float label() const;
  void set_label(float value);
  private:
  float _internal_label() const;
  void _internal_set_label(float value);
  public:

  // @@protoc_insertion_point(class_scope:com.nus.dbsytem.falcon.v0.inference.PredictionOutput)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > probabilities_;
  mutable std::atomic<int> _probabilities_cached_byte_size_;
  float label_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lr_5fgrpc_2eproto;
};
// -------------------------------------------------------------------

class PredictionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsytem.falcon.v0.inference.PredictionResponse) */ {
 public:
  inline PredictionResponse() : PredictionResponse(nullptr) {}
  virtual ~PredictionResponse();

  PredictionResponse(const PredictionResponse& from);
  PredictionResponse(PredictionResponse&& from) noexcept
    : PredictionResponse() {
    *this = ::std::move(from);
  }

  inline PredictionResponse& operator=(const PredictionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionResponse& operator=(PredictionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PredictionResponse& default_instance();

  static inline const PredictionResponse* internal_default_instance() {
    return reinterpret_cast<const PredictionResponse*>(
               &_PredictionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(PredictionResponse& a, PredictionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PredictionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PredictionResponse* New() const final {
    return CreateMaybeMessage<PredictionResponse>(nullptr);
  }

  PredictionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PredictionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PredictionResponse& from);
  void MergeFrom(const PredictionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.nus.dbsytem.falcon.v0.inference.PredictionResponse";
  }
  protected:
  explicit PredictionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_lr_5fgrpc_2eproto);
    return ::descriptor_table_lr_5fgrpc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOutputsFieldNumber = 2,
    kSampleNumFieldNumber = 1,
  };
  // repeated .com.nus.dbsytem.falcon.v0.inference.PredictionOutput outputs = 2;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;
  public:
  void clear_outputs();
  ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* mutable_outputs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput >*
      mutable_outputs();
  private:
  const ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput& _internal_outputs(int index) const;
  ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* _internal_add_outputs();
  public:
  const ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput& outputs(int index) const;
  ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* add_outputs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput >&
      outputs() const;

  // int32 sample_num = 1;
  void clear_sample_num();
  ::PROTOBUF_NAMESPACE_ID::int32 sample_num() const;
  void set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sample_num() const;
  void _internal_set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:com.nus.dbsytem.falcon.v0.inference.PredictionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput > outputs_;
  ::PROTOBUF_NAMESPACE_ID::int32 sample_num_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_lr_5fgrpc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PredictionRequest

// int32 sample_num = 1;
inline void PredictionRequest::clear_sample_num() {
  sample_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionRequest::_internal_sample_num() const {
  return sample_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionRequest::sample_num() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsytem.falcon.v0.inference.PredictionRequest.sample_num)
  return _internal_sample_num();
}
inline void PredictionRequest::_internal_set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sample_num_ = value;
}
inline void PredictionRequest::set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sample_num(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsytem.falcon.v0.inference.PredictionRequest.sample_num)
}

// repeated int32 sample_ids = 2;
inline int PredictionRequest::_internal_sample_ids_size() const {
  return sample_ids_.size();
}
inline int PredictionRequest::sample_ids_size() const {
  return _internal_sample_ids_size();
}
inline void PredictionRequest::clear_sample_ids() {
  sample_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionRequest::_internal_sample_ids(int index) const {
  return sample_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionRequest::sample_ids(int index) const {
  // @@protoc_insertion_point(field_get:com.nus.dbsytem.falcon.v0.inference.PredictionRequest.sample_ids)
  return _internal_sample_ids(index);
}
inline void PredictionRequest::set_sample_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  sample_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.nus.dbsytem.falcon.v0.inference.PredictionRequest.sample_ids)
}
inline void PredictionRequest::_internal_add_sample_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  sample_ids_.Add(value);
}
inline void PredictionRequest::add_sample_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_sample_ids(value);
  // @@protoc_insertion_point(field_add:com.nus.dbsytem.falcon.v0.inference.PredictionRequest.sample_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
PredictionRequest::_internal_sample_ids() const {
  return sample_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
PredictionRequest::sample_ids() const {
  // @@protoc_insertion_point(field_list:com.nus.dbsytem.falcon.v0.inference.PredictionRequest.sample_ids)
  return _internal_sample_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
PredictionRequest::_internal_mutable_sample_ids() {
  return &sample_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
PredictionRequest::mutable_sample_ids() {
  // @@protoc_insertion_point(field_mutable_list:com.nus.dbsytem.falcon.v0.inference.PredictionRequest.sample_ids)
  return _internal_mutable_sample_ids();
}

// -------------------------------------------------------------------

// PredictionOutput

// float label = 1;
inline void PredictionOutput::clear_label() {
  label_ = 0;
}
inline float PredictionOutput::_internal_label() const {
  return label_;
}
inline float PredictionOutput::label() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsytem.falcon.v0.inference.PredictionOutput.label)
  return _internal_label();
}
inline void PredictionOutput::_internal_set_label(float value) {
  
  label_ = value;
}
inline void PredictionOutput::set_label(float value) {
  _internal_set_label(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsytem.falcon.v0.inference.PredictionOutput.label)
}

// repeated float probabilities = 2;
inline int PredictionOutput::_internal_probabilities_size() const {
  return probabilities_.size();
}
inline int PredictionOutput::probabilities_size() const {
  return _internal_probabilities_size();
}
inline void PredictionOutput::clear_probabilities() {
  probabilities_.Clear();
}
inline float PredictionOutput::_internal_probabilities(int index) const {
  return probabilities_.Get(index);
}
inline float PredictionOutput::probabilities(int index) const {
  // @@protoc_insertion_point(field_get:com.nus.dbsytem.falcon.v0.inference.PredictionOutput.probabilities)
  return _internal_probabilities(index);
}
inline void PredictionOutput::set_probabilities(int index, float value) {
  probabilities_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.nus.dbsytem.falcon.v0.inference.PredictionOutput.probabilities)
}
inline void PredictionOutput::_internal_add_probabilities(float value) {
  probabilities_.Add(value);
}
inline void PredictionOutput::add_probabilities(float value) {
  _internal_add_probabilities(value);
  // @@protoc_insertion_point(field_add:com.nus.dbsytem.falcon.v0.inference.PredictionOutput.probabilities)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PredictionOutput::_internal_probabilities() const {
  return probabilities_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
PredictionOutput::probabilities() const {
  // @@protoc_insertion_point(field_list:com.nus.dbsytem.falcon.v0.inference.PredictionOutput.probabilities)
  return _internal_probabilities();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PredictionOutput::_internal_mutable_probabilities() {
  return &probabilities_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
PredictionOutput::mutable_probabilities() {
  // @@protoc_insertion_point(field_mutable_list:com.nus.dbsytem.falcon.v0.inference.PredictionOutput.probabilities)
  return _internal_mutable_probabilities();
}

// -------------------------------------------------------------------

// PredictionResponse

// int32 sample_num = 1;
inline void PredictionResponse::clear_sample_num() {
  sample_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionResponse::_internal_sample_num() const {
  return sample_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionResponse::sample_num() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsytem.falcon.v0.inference.PredictionResponse.sample_num)
  return _internal_sample_num();
}
inline void PredictionResponse::_internal_set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sample_num_ = value;
}
inline void PredictionResponse::set_sample_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sample_num(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsytem.falcon.v0.inference.PredictionResponse.sample_num)
}

// repeated .com.nus.dbsytem.falcon.v0.inference.PredictionOutput outputs = 2;
inline int PredictionResponse::_internal_outputs_size() const {
  return outputs_.size();
}
inline int PredictionResponse::outputs_size() const {
  return _internal_outputs_size();
}
inline void PredictionResponse::clear_outputs() {
  outputs_.Clear();
}
inline ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* PredictionResponse::mutable_outputs(int index) {
  // @@protoc_insertion_point(field_mutable:com.nus.dbsytem.falcon.v0.inference.PredictionResponse.outputs)
  return outputs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput >*
PredictionResponse::mutable_outputs() {
  // @@protoc_insertion_point(field_mutable_list:com.nus.dbsytem.falcon.v0.inference.PredictionResponse.outputs)
  return &outputs_;
}
inline const ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput& PredictionResponse::_internal_outputs(int index) const {
  return outputs_.Get(index);
}
inline const ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput& PredictionResponse::outputs(int index) const {
  // @@protoc_insertion_point(field_get:com.nus.dbsytem.falcon.v0.inference.PredictionResponse.outputs)
  return _internal_outputs(index);
}
inline ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* PredictionResponse::_internal_add_outputs() {
  return outputs_.Add();
}
inline ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput* PredictionResponse::add_outputs() {
  // @@protoc_insertion_point(field_add:com.nus.dbsytem.falcon.v0.inference.PredictionResponse.outputs)
  return _internal_add_outputs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::com::nus::dbsytem::falcon::v0::inference::PredictionOutput >&
PredictionResponse::outputs() const {
  // @@protoc_insertion_point(field_list:com.nus.dbsytem.falcon.v0.inference.PredictionResponse.outputs)
  return outputs_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace inference
}  // namespace v0
}  // namespace falcon
}  // namespace dbsytem
}  // namespace nus
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_lr_5fgrpc_2eproto

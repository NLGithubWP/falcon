// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: job.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_job_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_job_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_job_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_job_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_job_2eproto;
namespace com {
namespace nus {
namespace dbsystem {
namespace falcon {
namespace v0 {
class ForwardJobRequest;
class ForwardJobRequestDefaultTypeInternal;
extern ForwardJobRequestDefaultTypeInternal _ForwardJobRequest_default_instance_;
class ForwardJobResponse;
class ForwardJobResponseDefaultTypeInternal;
extern ForwardJobResponseDefaultTypeInternal _ForwardJobResponse_default_instance_;
class StopJobRequest;
class StopJobRequestDefaultTypeInternal;
extern StopJobRequestDefaultTypeInternal _StopJobRequest_default_instance_;
class StopJobResponse;
class StopJobResponseDefaultTypeInternal;
extern StopJobResponseDefaultTypeInternal _StopJobResponse_default_instance_;
}  // namespace v0
}  // namespace falcon
}  // namespace dbsystem
}  // namespace nus
}  // namespace com
PROTOBUF_NAMESPACE_OPEN
template<> ::com::nus::dbsystem::falcon::v0::ForwardJobRequest* Arena::CreateMaybeMessage<::com::nus::dbsystem::falcon::v0::ForwardJobRequest>(Arena*);
template<> ::com::nus::dbsystem::falcon::v0::ForwardJobResponse* Arena::CreateMaybeMessage<::com::nus::dbsystem::falcon::v0::ForwardJobResponse>(Arena*);
template<> ::com::nus::dbsystem::falcon::v0::StopJobRequest* Arena::CreateMaybeMessage<::com::nus::dbsystem::falcon::v0::StopJobRequest>(Arena*);
template<> ::com::nus::dbsystem::falcon::v0::StopJobResponse* Arena::CreateMaybeMessage<::com::nus::dbsystem::falcon::v0::StopJobResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace com {
namespace nus {
namespace dbsystem {
namespace falcon {
namespace v0 {

// ===================================================================

class ForwardJobRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsystem.falcon.v0.ForwardJobRequest) */ {
 public:
  inline ForwardJobRequest() : ForwardJobRequest(nullptr) {}
  virtual ~ForwardJobRequest();

  ForwardJobRequest(const ForwardJobRequest& from);
  ForwardJobRequest(ForwardJobRequest&& from) noexcept
    : ForwardJobRequest() {
    *this = ::std::move(from);
  }

  inline ForwardJobRequest& operator=(const ForwardJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardJobRequest& operator=(ForwardJobRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ForwardJobRequest& default_instance();

  static inline const ForwardJobRequest* internal_default_instance() {
    return reinterpret_cast<const ForwardJobRequest*>(
               &_ForwardJobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ForwardJobRequest& a, ForwardJobRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ForwardJobRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardJobRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ForwardJobRequest* New() const final {
    return CreateMaybeMessage<ForwardJobRequest>(nullptr);
  }

  ForwardJobRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ForwardJobRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ForwardJobRequest& from);
  void MergeFrom(const ForwardJobRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardJobRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.nus.dbsystem.falcon.v0.ForwardJobRequest";
  }
  protected:
  explicit ForwardJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_job_2eproto);
    return ::descriptor_table_job_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPartyIdsFieldNumber = 5,
    kJobNameFieldNumber = 2,
    kJobDescFieldNumber = 7,
    kJobIdFieldNumber = 1,
    kTaskNumFieldNumber = 3,
    kPartyNumFieldNumber = 4,
    kFlSettingFieldNumber = 6,
  };
  // repeated int32 party_ids = 5;
  int party_ids_size() const;
  private:
  int _internal_party_ids_size() const;
  public:
  void clear_party_ids();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_party_ids(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_party_ids() const;
  void _internal_add_party_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_party_ids();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 party_ids(int index) const;
  void set_party_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_party_ids(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      party_ids() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_party_ids();

  // string job_name = 2;
  void clear_job_name();
  const std::string& job_name() const;
  void set_job_name(const std::string& value);
  void set_job_name(std::string&& value);
  void set_job_name(const char* value);
  void set_job_name(const char* value, size_t size);
  std::string* mutable_job_name();
  std::string* release_job_name();
  void set_allocated_job_name(std::string* job_name);
  private:
  const std::string& _internal_job_name() const;
  void _internal_set_job_name(const std::string& value);
  std::string* _internal_mutable_job_name();
  public:

  // .google.protobuf.Value job_desc = 7;
  bool has_job_desc() const;
  private:
  bool _internal_has_job_desc() const;
  public:
  void clear_job_desc();
  const PROTOBUF_NAMESPACE_ID::Value& job_desc() const;
  PROTOBUF_NAMESPACE_ID::Value* release_job_desc();
  PROTOBUF_NAMESPACE_ID::Value* mutable_job_desc();
  void set_allocated_job_desc(PROTOBUF_NAMESPACE_ID::Value* job_desc);
  private:
  const PROTOBUF_NAMESPACE_ID::Value& _internal_job_desc() const;
  PROTOBUF_NAMESPACE_ID::Value* _internal_mutable_job_desc();
  public:
  void unsafe_arena_set_allocated_job_desc(
      PROTOBUF_NAMESPACE_ID::Value* job_desc);
  PROTOBUF_NAMESPACE_ID::Value* unsafe_arena_release_job_desc();

  // int32 job_id = 1;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::int32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_job_id() const;
  void _internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 task_num = 3;
  void clear_task_num();
  ::PROTOBUF_NAMESPACE_ID::int32 task_num() const;
  void set_task_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_task_num() const;
  void _internal_set_task_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 party_num = 4;
  void clear_party_num();
  ::PROTOBUF_NAMESPACE_ID::int32 party_num() const;
  void set_party_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_party_num() const;
  void _internal_set_party_num(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 fl_setting = 6;
  void clear_fl_setting();
  ::PROTOBUF_NAMESPACE_ID::int32 fl_setting() const;
  void set_fl_setting(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_fl_setting() const;
  void _internal_set_fl_setting(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:com.nus.dbsystem.falcon.v0.ForwardJobRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > party_ids_;
  mutable std::atomic<int> _party_ids_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr job_name_;
  PROTOBUF_NAMESPACE_ID::Value* job_desc_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 task_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 party_num_;
  ::PROTOBUF_NAMESPACE_ID::int32 fl_setting_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_job_2eproto;
};
// -------------------------------------------------------------------

class ForwardJobResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsystem.falcon.v0.ForwardJobResponse) */ {
 public:
  inline ForwardJobResponse() : ForwardJobResponse(nullptr) {}
  virtual ~ForwardJobResponse();

  ForwardJobResponse(const ForwardJobResponse& from);
  ForwardJobResponse(ForwardJobResponse&& from) noexcept
    : ForwardJobResponse() {
    *this = ::std::move(from);
  }

  inline ForwardJobResponse& operator=(const ForwardJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardJobResponse& operator=(ForwardJobResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ForwardJobResponse& default_instance();

  static inline const ForwardJobResponse* internal_default_instance() {
    return reinterpret_cast<const ForwardJobResponse*>(
               &_ForwardJobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ForwardJobResponse& a, ForwardJobResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ForwardJobResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardJobResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ForwardJobResponse* New() const final {
    return CreateMaybeMessage<ForwardJobResponse>(nullptr);
  }

  ForwardJobResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ForwardJobResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ForwardJobResponse& from);
  void MergeFrom(const ForwardJobResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ForwardJobResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.nus.dbsystem.falcon.v0.ForwardJobResponse";
  }
  protected:
  explicit ForwardJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_job_2eproto);
    return ::descriptor_table_job_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorMsgFieldNumber = 4,
    kJobIdFieldNumber = 1,
    kIsSuccessFieldNumber = 2,
    kErrorCodeFieldNumber = 3,
  };
  // string error_msg = 4;
  void clear_error_msg();
  const std::string& error_msg() const;
  void set_error_msg(const std::string& value);
  void set_error_msg(std::string&& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  std::string* mutable_error_msg();
  std::string* release_error_msg();
  void set_allocated_error_msg(std::string* error_msg);
  private:
  const std::string& _internal_error_msg() const;
  void _internal_set_error_msg(const std::string& value);
  std::string* _internal_mutable_error_msg();
  public:

  // int32 job_id = 1;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::int32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_job_id() const;
  void _internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_success = 2;
  void clear_is_success();
  ::PROTOBUF_NAMESPACE_ID::int32 is_success() const;
  void set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_success() const;
  void _internal_set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 error_code = 3;
  void clear_error_code();
  ::PROTOBUF_NAMESPACE_ID::int32 error_code() const;
  void set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_error_code() const;
  void _internal_set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:com.nus.dbsystem.falcon.v0.ForwardJobResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_success_;
  ::PROTOBUF_NAMESPACE_ID::int32 error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_job_2eproto;
};
// -------------------------------------------------------------------

class StopJobRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsystem.falcon.v0.StopJobRequest) */ {
 public:
  inline StopJobRequest() : StopJobRequest(nullptr) {}
  virtual ~StopJobRequest();

  StopJobRequest(const StopJobRequest& from);
  StopJobRequest(StopJobRequest&& from) noexcept
    : StopJobRequest() {
    *this = ::std::move(from);
  }

  inline StopJobRequest& operator=(const StopJobRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopJobRequest& operator=(StopJobRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StopJobRequest& default_instance();

  static inline const StopJobRequest* internal_default_instance() {
    return reinterpret_cast<const StopJobRequest*>(
               &_StopJobRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(StopJobRequest& a, StopJobRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StopJobRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopJobRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StopJobRequest* New() const final {
    return CreateMaybeMessage<StopJobRequest>(nullptr);
  }

  StopJobRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StopJobRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StopJobRequest& from);
  void MergeFrom(const StopJobRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopJobRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.nus.dbsystem.falcon.v0.StopJobRequest";
  }
  protected:
  explicit StopJobRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_job_2eproto);
    return ::descriptor_table_job_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJobIdFieldNumber = 1,
  };
  // int32 job_id = 1;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::int32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_job_id() const;
  void _internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:com.nus.dbsystem.falcon.v0.StopJobRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_id_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_job_2eproto;
};
// -------------------------------------------------------------------

class StopJobResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsystem.falcon.v0.StopJobResponse) */ {
 public:
  inline StopJobResponse() : StopJobResponse(nullptr) {}
  virtual ~StopJobResponse();

  StopJobResponse(const StopJobResponse& from);
  StopJobResponse(StopJobResponse&& from) noexcept
    : StopJobResponse() {
    *this = ::std::move(from);
  }

  inline StopJobResponse& operator=(const StopJobResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopJobResponse& operator=(StopJobResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StopJobResponse& default_instance();

  static inline const StopJobResponse* internal_default_instance() {
    return reinterpret_cast<const StopJobResponse*>(
               &_StopJobResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(StopJobResponse& a, StopJobResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StopJobResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopJobResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline StopJobResponse* New() const final {
    return CreateMaybeMessage<StopJobResponse>(nullptr);
  }

  StopJobResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StopJobResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StopJobResponse& from);
  void MergeFrom(const StopJobResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StopJobResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "com.nus.dbsystem.falcon.v0.StopJobResponse";
  }
  protected:
  explicit StopJobResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_job_2eproto);
    return ::descriptor_table_job_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kErrorMsgFieldNumber = 4,
    kJobIdFieldNumber = 1,
    kIsSuccessFieldNumber = 2,
    kErrorCodeFieldNumber = 3,
  };
  // string error_msg = 4;
  void clear_error_msg();
  const std::string& error_msg() const;
  void set_error_msg(const std::string& value);
  void set_error_msg(std::string&& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  std::string* mutable_error_msg();
  std::string* release_error_msg();
  void set_allocated_error_msg(std::string* error_msg);
  private:
  const std::string& _internal_error_msg() const;
  void _internal_set_error_msg(const std::string& value);
  std::string* _internal_mutable_error_msg();
  public:

  // int32 job_id = 1;
  void clear_job_id();
  ::PROTOBUF_NAMESPACE_ID::int32 job_id() const;
  void set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_job_id() const;
  void _internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 is_success = 2;
  void clear_is_success();
  ::PROTOBUF_NAMESPACE_ID::int32 is_success() const;
  void set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_is_success() const;
  void _internal_set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 error_code = 3;
  void clear_error_code();
  ::PROTOBUF_NAMESPACE_ID::int32 error_code() const;
  void set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_error_code() const;
  void _internal_set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:com.nus.dbsystem.falcon.v0.StopJobResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr error_msg_;
  ::PROTOBUF_NAMESPACE_ID::int32 job_id_;
  ::PROTOBUF_NAMESPACE_ID::int32 is_success_;
  ::PROTOBUF_NAMESPACE_ID::int32 error_code_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_job_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ForwardJobRequest

// int32 job_id = 1;
inline void ForwardJobRequest::clear_job_id() {
  job_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::_internal_job_id() const {
  return job_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::job_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_id)
  return _internal_job_id();
}
inline void ForwardJobRequest::_internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  job_id_ = value;
}
inline void ForwardJobRequest::set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_job_id(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_id)
}

// string job_name = 2;
inline void ForwardJobRequest::clear_job_name() {
  job_name_.ClearToEmpty();
}
inline const std::string& ForwardJobRequest::job_name() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
  return _internal_job_name();
}
inline void ForwardJobRequest::set_job_name(const std::string& value) {
  _internal_set_job_name(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
}
inline std::string* ForwardJobRequest::mutable_job_name() {
  // @@protoc_insertion_point(field_mutable:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
  return _internal_mutable_job_name();
}
inline const std::string& ForwardJobRequest::_internal_job_name() const {
  return job_name_.Get();
}
inline void ForwardJobRequest::_internal_set_job_name(const std::string& value) {
  
  job_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ForwardJobRequest::set_job_name(std::string&& value) {
  
  job_name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
}
inline void ForwardJobRequest::set_job_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  job_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
}
inline void ForwardJobRequest::set_job_name(const char* value,
    size_t size) {
  
  job_name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
}
inline std::string* ForwardJobRequest::_internal_mutable_job_name() {
  
  return job_name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ForwardJobRequest::release_job_name() {
  // @@protoc_insertion_point(field_release:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
  return job_name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ForwardJobRequest::set_allocated_job_name(std::string* job_name) {
  if (job_name != nullptr) {
    
  } else {
    
  }
  job_name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), job_name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_name)
}

// int32 task_num = 3;
inline void ForwardJobRequest::clear_task_num() {
  task_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::_internal_task_num() const {
  return task_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::task_num() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobRequest.task_num)
  return _internal_task_num();
}
inline void ForwardJobRequest::_internal_set_task_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  task_num_ = value;
}
inline void ForwardJobRequest::set_task_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_task_num(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobRequest.task_num)
}

// int32 party_num = 4;
inline void ForwardJobRequest::clear_party_num() {
  party_num_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::_internal_party_num() const {
  return party_num_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::party_num() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobRequest.party_num)
  return _internal_party_num();
}
inline void ForwardJobRequest::_internal_set_party_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  party_num_ = value;
}
inline void ForwardJobRequest::set_party_num(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_party_num(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobRequest.party_num)
}

// repeated int32 party_ids = 5;
inline int ForwardJobRequest::_internal_party_ids_size() const {
  return party_ids_.size();
}
inline int ForwardJobRequest::party_ids_size() const {
  return _internal_party_ids_size();
}
inline void ForwardJobRequest::clear_party_ids() {
  party_ids_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::_internal_party_ids(int index) const {
  return party_ids_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::party_ids(int index) const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobRequest.party_ids)
  return _internal_party_ids(index);
}
inline void ForwardJobRequest::set_party_ids(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  party_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobRequest.party_ids)
}
inline void ForwardJobRequest::_internal_add_party_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  party_ids_.Add(value);
}
inline void ForwardJobRequest::add_party_ids(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_party_ids(value);
  // @@protoc_insertion_point(field_add:com.nus.dbsystem.falcon.v0.ForwardJobRequest.party_ids)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ForwardJobRequest::_internal_party_ids() const {
  return party_ids_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
ForwardJobRequest::party_ids() const {
  // @@protoc_insertion_point(field_list:com.nus.dbsystem.falcon.v0.ForwardJobRequest.party_ids)
  return _internal_party_ids();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ForwardJobRequest::_internal_mutable_party_ids() {
  return &party_ids_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
ForwardJobRequest::mutable_party_ids() {
  // @@protoc_insertion_point(field_mutable_list:com.nus.dbsystem.falcon.v0.ForwardJobRequest.party_ids)
  return _internal_mutable_party_ids();
}

// int32 fl_setting = 6;
inline void ForwardJobRequest::clear_fl_setting() {
  fl_setting_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::_internal_fl_setting() const {
  return fl_setting_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobRequest::fl_setting() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobRequest.fl_setting)
  return _internal_fl_setting();
}
inline void ForwardJobRequest::_internal_set_fl_setting(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fl_setting_ = value;
}
inline void ForwardJobRequest::set_fl_setting(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_fl_setting(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobRequest.fl_setting)
}

// .google.protobuf.Value job_desc = 7;
inline bool ForwardJobRequest::_internal_has_job_desc() const {
  return this != internal_default_instance() && job_desc_ != nullptr;
}
inline bool ForwardJobRequest::has_job_desc() const {
  return _internal_has_job_desc();
}
inline const PROTOBUF_NAMESPACE_ID::Value& ForwardJobRequest::_internal_job_desc() const {
  const PROTOBUF_NAMESPACE_ID::Value* p = job_desc_;
  return p != nullptr ? *p : reinterpret_cast<const PROTOBUF_NAMESPACE_ID::Value&>(
      PROTOBUF_NAMESPACE_ID::_Value_default_instance_);
}
inline const PROTOBUF_NAMESPACE_ID::Value& ForwardJobRequest::job_desc() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_desc)
  return _internal_job_desc();
}
inline void ForwardJobRequest::unsafe_arena_set_allocated_job_desc(
    PROTOBUF_NAMESPACE_ID::Value* job_desc) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(job_desc_);
  }
  job_desc_ = job_desc;
  if (job_desc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_desc)
}
inline PROTOBUF_NAMESPACE_ID::Value* ForwardJobRequest::release_job_desc() {
  
  PROTOBUF_NAMESPACE_ID::Value* temp = job_desc_;
  job_desc_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Value* ForwardJobRequest::unsafe_arena_release_job_desc() {
  // @@protoc_insertion_point(field_release:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_desc)
  
  PROTOBUF_NAMESPACE_ID::Value* temp = job_desc_;
  job_desc_ = nullptr;
  return temp;
}
inline PROTOBUF_NAMESPACE_ID::Value* ForwardJobRequest::_internal_mutable_job_desc() {
  
  if (job_desc_ == nullptr) {
    auto* p = CreateMaybeMessage<PROTOBUF_NAMESPACE_ID::Value>(GetArena());
    job_desc_ = p;
  }
  return job_desc_;
}
inline PROTOBUF_NAMESPACE_ID::Value* ForwardJobRequest::mutable_job_desc() {
  // @@protoc_insertion_point(field_mutable:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_desc)
  return _internal_mutable_job_desc();
}
inline void ForwardJobRequest::set_allocated_job_desc(PROTOBUF_NAMESPACE_ID::Value* job_desc) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(job_desc_);
  }
  if (job_desc) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(job_desc)->GetArena();
    if (message_arena != submessage_arena) {
      job_desc = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, job_desc, submessage_arena);
    }
    
  } else {
    
  }
  job_desc_ = job_desc;
  // @@protoc_insertion_point(field_set_allocated:com.nus.dbsystem.falcon.v0.ForwardJobRequest.job_desc)
}

// -------------------------------------------------------------------

// ForwardJobResponse

// int32 job_id = 1;
inline void ForwardJobResponse::clear_job_id() {
  job_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobResponse::_internal_job_id() const {
  return job_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobResponse::job_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobResponse.job_id)
  return _internal_job_id();
}
inline void ForwardJobResponse::_internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  job_id_ = value;
}
inline void ForwardJobResponse::set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_job_id(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobResponse.job_id)
}

// int32 is_success = 2;
inline void ForwardJobResponse::clear_is_success() {
  is_success_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobResponse::_internal_is_success() const {
  return is_success_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobResponse::is_success() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobResponse.is_success)
  return _internal_is_success();
}
inline void ForwardJobResponse::_internal_set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_success_ = value;
}
inline void ForwardJobResponse::set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_success(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobResponse.is_success)
}

// int32 error_code = 3;
inline void ForwardJobResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobResponse::_internal_error_code() const {
  return error_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ForwardJobResponse::error_code() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_code)
  return _internal_error_code();
}
inline void ForwardJobResponse::_internal_set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  error_code_ = value;
}
inline void ForwardJobResponse::set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_code)
}

// string error_msg = 4;
inline void ForwardJobResponse::clear_error_msg() {
  error_msg_.ClearToEmpty();
}
inline const std::string& ForwardJobResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
  return _internal_error_msg();
}
inline void ForwardJobResponse::set_error_msg(const std::string& value) {
  _internal_set_error_msg(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
}
inline std::string* ForwardJobResponse::mutable_error_msg() {
  // @@protoc_insertion_point(field_mutable:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
  return _internal_mutable_error_msg();
}
inline const std::string& ForwardJobResponse::_internal_error_msg() const {
  return error_msg_.Get();
}
inline void ForwardJobResponse::_internal_set_error_msg(const std::string& value) {
  
  error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ForwardJobResponse::set_error_msg(std::string&& value) {
  
  error_msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
}
inline void ForwardJobResponse::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
}
inline void ForwardJobResponse::set_error_msg(const char* value,
    size_t size) {
  
  error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
}
inline std::string* ForwardJobResponse::_internal_mutable_error_msg() {
  
  return error_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ForwardJobResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
  return error_msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ForwardJobResponse::set_allocated_error_msg(std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.nus.dbsystem.falcon.v0.ForwardJobResponse.error_msg)
}

// -------------------------------------------------------------------

// StopJobRequest

// int32 job_id = 1;
inline void StopJobRequest::clear_job_id() {
  job_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobRequest::_internal_job_id() const {
  return job_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobRequest::job_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.StopJobRequest.job_id)
  return _internal_job_id();
}
inline void StopJobRequest::_internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  job_id_ = value;
}
inline void StopJobRequest::set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_job_id(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.StopJobRequest.job_id)
}

// -------------------------------------------------------------------

// StopJobResponse

// int32 job_id = 1;
inline void StopJobResponse::clear_job_id() {
  job_id_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobResponse::_internal_job_id() const {
  return job_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobResponse::job_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.StopJobResponse.job_id)
  return _internal_job_id();
}
inline void StopJobResponse::_internal_set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  job_id_ = value;
}
inline void StopJobResponse::set_job_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_job_id(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.StopJobResponse.job_id)
}

// int32 is_success = 2;
inline void StopJobResponse::clear_is_success() {
  is_success_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobResponse::_internal_is_success() const {
  return is_success_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobResponse::is_success() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.StopJobResponse.is_success)
  return _internal_is_success();
}
inline void StopJobResponse::_internal_set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  is_success_ = value;
}
inline void StopJobResponse::set_is_success(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_is_success(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.StopJobResponse.is_success)
}

// int32 error_code = 3;
inline void StopJobResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobResponse::_internal_error_code() const {
  return error_code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 StopJobResponse::error_code() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.StopJobResponse.error_code)
  return _internal_error_code();
}
inline void StopJobResponse::_internal_set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  error_code_ = value;
}
inline void StopJobResponse::set_error_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_error_code(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.StopJobResponse.error_code)
}

// string error_msg = 4;
inline void StopJobResponse::clear_error_msg() {
  error_msg_.ClearToEmpty();
}
inline const std::string& StopJobResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
  return _internal_error_msg();
}
inline void StopJobResponse::set_error_msg(const std::string& value) {
  _internal_set_error_msg(value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
}
inline std::string* StopJobResponse::mutable_error_msg() {
  // @@protoc_insertion_point(field_mutable:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
  return _internal_mutable_error_msg();
}
inline const std::string& StopJobResponse::_internal_error_msg() const {
  return error_msg_.Get();
}
inline void StopJobResponse::_internal_set_error_msg(const std::string& value) {
  
  error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void StopJobResponse::set_error_msg(std::string&& value) {
  
  error_msg_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
}
inline void StopJobResponse::set_error_msg(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
}
inline void StopJobResponse::set_error_msg(const char* value,
    size_t size) {
  
  error_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
}
inline std::string* StopJobResponse::_internal_mutable_error_msg() {
  
  return error_msg_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* StopJobResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
  return error_msg_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void StopJobResponse::set_allocated_error_msg(std::string* error_msg) {
  if (error_msg != nullptr) {
    
  } else {
    
  }
  error_msg_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), error_msg,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:com.nus.dbsystem.falcon.v0.StopJobResponse.error_msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v0
}  // namespace falcon
}  // namespace dbsystem
}  // namespace nus
}  // namespace com

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_job_2eproto

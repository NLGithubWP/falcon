syntax = "proto3";

package com.nus.dbsytem.falcon.v0;
option go_package = "/v0";

import public "common.proto";

message Layer {
  // the number of inputs for each neuron in this layer
  // in fact, it is the number of neurons (number of outputs) of the previous layer
  int32 num_inputs = 1;
  // the number of outputs for this layer
  int32 num_outputs = 2;
  // whether the neurons of this layer have bias (default true)
  bool fit_bias = 3;
  // the activation function string
  string activation_func_str = 4;
  // the weight matrix, encrypted values during training, dimension = (m_num_inputs, m_num_outputs)
  EncodedNumberMatrix weight_mat = 5;
  // the bias vector, encrypted values during training, dimension = m_num_outputs
  EncodedNumberArray bias_vec = 6;
}

message MlpModel {
  // whether classification or regression
  bool is_classification = 1;
  // the number of inputs (input layer size)
  int32 num_inputs = 2;
  // the number of outputs (output layer size)
  int32 num_outputs = 3;
  // the number of hidden_layers
  int32 num_hidden_layers = 4;
  // the number of neurons in each layer
  repeated int32 num_layers_neurons = 5;
  // the vector of layers
  repeated Layer layers = 6;
  // the number of layers
  int32 n_layers = 7;
}
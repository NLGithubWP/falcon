// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

#ifndef PROTOBUF_model_2eproto__INCLUDED
#define PROTOBUF_model_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace com {
namespace nus {
namespace dbsystem {
namespace falcon {
namespace v0 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_model_2eproto();
void protobuf_AssignDesc_model_2eproto();
void protobuf_ShutdownFile_model_2eproto();

class ModelPublishRequest;
class ModelPublishResponse;

// ===================================================================

class ModelPublishRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsystem.falcon.v0.ModelPublishRequest) */ {
 public:
  ModelPublishRequest();
  virtual ~ModelPublishRequest();

  ModelPublishRequest(const ModelPublishRequest& from);

  inline ModelPublishRequest& operator=(const ModelPublishRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelPublishRequest& default_instance();

  void Swap(ModelPublishRequest* other);

  // implements Message ----------------------------------------------

  inline ModelPublishRequest* New() const { return New(NULL); }

  ModelPublishRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelPublishRequest& from);
  void MergeFrom(const ModelPublishRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelPublishRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 model_id = 1;
  void clear_model_id();
  static const int kModelIdFieldNumber = 1;
  ::google::protobuf::int32 model_id() const;
  void set_model_id(::google::protobuf::int32 value);

  // optional int32 initiator_party_id = 2;
  void clear_initiator_party_id();
  static const int kInitiatorPartyIdFieldNumber = 2;
  ::google::protobuf::int32 initiator_party_id() const;
  void set_initiator_party_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:com.nus.dbsystem.falcon.v0.ModelPublishRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 model_id_;
  ::google::protobuf::int32 initiator_party_id_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_model_2eproto();
  friend void protobuf_AssignDesc_model_2eproto();
  friend void protobuf_ShutdownFile_model_2eproto();

  void InitAsDefaultInstance();
  static ModelPublishRequest* default_instance_;
};
// -------------------------------------------------------------------

class ModelPublishResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:com.nus.dbsystem.falcon.v0.ModelPublishResponse) */ {
 public:
  ModelPublishResponse();
  virtual ~ModelPublishResponse();

  ModelPublishResponse(const ModelPublishResponse& from);

  inline ModelPublishResponse& operator=(const ModelPublishResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelPublishResponse& default_instance();

  void Swap(ModelPublishResponse* other);

  // implements Message ----------------------------------------------

  inline ModelPublishResponse* New() const { return New(NULL); }

  ModelPublishResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelPublishResponse& from);
  void MergeFrom(const ModelPublishResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelPublishResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 model_id = 1;
  void clear_model_id();
  static const int kModelIdFieldNumber = 1;
  ::google::protobuf::int32 model_id() const;
  void set_model_id(::google::protobuf::int32 value);

  // optional int32 initiator_party_id = 2;
  void clear_initiator_party_id();
  static const int kInitiatorPartyIdFieldNumber = 2;
  ::google::protobuf::int32 initiator_party_id() const;
  void set_initiator_party_id(::google::protobuf::int32 value);

  // optional int32 is_success = 3;
  void clear_is_success();
  static const int kIsSuccessFieldNumber = 3;
  ::google::protobuf::int32 is_success() const;
  void set_is_success(::google::protobuf::int32 value);

  // optional int32 error_code = 4;
  void clear_error_code();
  static const int kErrorCodeFieldNumber = 4;
  ::google::protobuf::int32 error_code() const;
  void set_error_code(::google::protobuf::int32 value);

  // optional string error_msg = 5;
  void clear_error_msg();
  static const int kErrorMsgFieldNumber = 5;
  const ::std::string& error_msg() const;
  void set_error_msg(const ::std::string& value);
  void set_error_msg(const char* value);
  void set_error_msg(const char* value, size_t size);
  ::std::string* mutable_error_msg();
  ::std::string* release_error_msg();
  void set_allocated_error_msg(::std::string* error_msg);

  // @@protoc_insertion_point(class_scope:com.nus.dbsystem.falcon.v0.ModelPublishResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool _is_default_instance_;
  ::google::protobuf::int32 model_id_;
  ::google::protobuf::int32 initiator_party_id_;
  ::google::protobuf::int32 is_success_;
  ::google::protobuf::int32 error_code_;
  ::google::protobuf::internal::ArenaStringPtr error_msg_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_model_2eproto();
  friend void protobuf_AssignDesc_model_2eproto();
  friend void protobuf_ShutdownFile_model_2eproto();

  void InitAsDefaultInstance();
  static ModelPublishResponse* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelPublishRequest

// optional int32 model_id = 1;
inline void ModelPublishRequest::clear_model_id() {
  model_id_ = 0;
}
inline ::google::protobuf::int32 ModelPublishRequest::model_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ModelPublishRequest.model_id)
  return model_id_;
}
inline void ModelPublishRequest::set_model_id(::google::protobuf::int32 value) {
  
  model_id_ = value;
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ModelPublishRequest.model_id)
}

// optional int32 initiator_party_id = 2;
inline void ModelPublishRequest::clear_initiator_party_id() {
  initiator_party_id_ = 0;
}
inline ::google::protobuf::int32 ModelPublishRequest::initiator_party_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ModelPublishRequest.initiator_party_id)
  return initiator_party_id_;
}
inline void ModelPublishRequest::set_initiator_party_id(::google::protobuf::int32 value) {
  
  initiator_party_id_ = value;
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ModelPublishRequest.initiator_party_id)
}

// -------------------------------------------------------------------

// ModelPublishResponse

// optional int32 model_id = 1;
inline void ModelPublishResponse::clear_model_id() {
  model_id_ = 0;
}
inline ::google::protobuf::int32 ModelPublishResponse::model_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ModelPublishResponse.model_id)
  return model_id_;
}
inline void ModelPublishResponse::set_model_id(::google::protobuf::int32 value) {
  
  model_id_ = value;
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ModelPublishResponse.model_id)
}

// optional int32 initiator_party_id = 2;
inline void ModelPublishResponse::clear_initiator_party_id() {
  initiator_party_id_ = 0;
}
inline ::google::protobuf::int32 ModelPublishResponse::initiator_party_id() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ModelPublishResponse.initiator_party_id)
  return initiator_party_id_;
}
inline void ModelPublishResponse::set_initiator_party_id(::google::protobuf::int32 value) {
  
  initiator_party_id_ = value;
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ModelPublishResponse.initiator_party_id)
}

// optional int32 is_success = 3;
inline void ModelPublishResponse::clear_is_success() {
  is_success_ = 0;
}
inline ::google::protobuf::int32 ModelPublishResponse::is_success() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ModelPublishResponse.is_success)
  return is_success_;
}
inline void ModelPublishResponse::set_is_success(::google::protobuf::int32 value) {
  
  is_success_ = value;
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ModelPublishResponse.is_success)
}

// optional int32 error_code = 4;
inline void ModelPublishResponse::clear_error_code() {
  error_code_ = 0;
}
inline ::google::protobuf::int32 ModelPublishResponse::error_code() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_code)
  return error_code_;
}
inline void ModelPublishResponse::set_error_code(::google::protobuf::int32 value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_code)
}

// optional string error_msg = 5;
inline void ModelPublishResponse::clear_error_msg() {
  error_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ModelPublishResponse::error_msg() const {
  // @@protoc_insertion_point(field_get:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_msg)
  return error_msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelPublishResponse::set_error_msg(const ::std::string& value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_msg)
}
inline void ModelPublishResponse::set_error_msg(const char* value) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_msg)
}
inline void ModelPublishResponse::set_error_msg(const char* value, size_t size) {
  
  error_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_msg)
}
inline ::std::string* ModelPublishResponse::mutable_error_msg() {
  
  // @@protoc_insertion_point(field_mutable:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_msg)
  return error_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelPublishResponse::release_error_msg() {
  // @@protoc_insertion_point(field_release:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_msg)
  
  return error_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelPublishResponse::set_allocated_error_msg(::std::string* error_msg) {
  if (error_msg != NULL) {
    
  } else {
    
  }
  error_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_msg);
  // @@protoc_insertion_point(field_set_allocated:com.nus.dbsystem.falcon.v0.ModelPublishResponse.error_msg)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v0
}  // namespace falcon
}  // namespace dbsystem
}  // namespace nus
}  // namespace com

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_model_2eproto__INCLUDED
